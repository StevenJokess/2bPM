
Scrum\ `1 <https://ones-ai.gitbooks.io/ones-ai>`__
==================================================

瀑布式（Waterfall）开发：概念设计>>设计>>编程>>测试修正

迭代周期可能短到一周，但分析、设计、编码、集成和测试等开发阶段一应俱全。而在采用瀑布开发的项目中，单个阶段也许就得花费数年时间。

动因
----

来自于市场的压力（逼迫我们用更少的成本来制作更符合真实客户需求的软件）

用Scrum的开发模式小步快跑，可以以速度最快、最经济的方式逐步加入满足消费者的功能，明确用户价值。

瀑布式开发的致命症结就在于它的预先设计（BDUFs，Big Design
Up-Front）无法完全清晰，并且变更成本巨大

Scrum流程
---------

在发布产品获得用户反馈后才正式开始——由真实用户反馈影响需求规划、产品迭代的“小步快跑”方式，才是Scrum的精髓所在

产品Backlog
~~~~~~~~~~~

最顶端的核心需求拆分成同样颗粒度大小的需求——这样才能准确估计工作量——然后把需求排入版本中。

User Story
~~~~~~~~~~

随着讨论和了解的细节增多，能够浮现出更多关于产品设计的细节和场景，也便越能进一步准确估算每个需求的工作量——不确定的特性是无法精确估算难度的。

Sprint
~~~~~~

固定的时间限，大约2~4周，每个版本产出功能性的垂直切片，他们各自就像一个个小型项目

Release
~~~~~~~

进入到准上市状态，这称作一次发布。一个典型的发布需要经历2~4个月，节奏类似于一个经典项目中的里程碑。

步骤
----

1. 通过创建需求池项目，进行对产品Backlog（需求列表）的管理。
2. 建立发布计划和Sprint迭代计划，清晰地区分阶段性目标。
3. 把需求排入相应的版本中，进行对发布计划和迭代的任务管理。

角色
----

Product Owner
~~~~~~~~~~~~~

负责明确目标、提出需求并排出优先级

Scrum Master
~~~~~~~~~~~~

项目经理一般也是版本负责人，他会控制需求变更、增加需求的数量，提前预告风险，以及明确版本交付质量。

PM必须提醒大家每个版本都是产品的垂直切片，不能推迟到下一个版本才修复上个版本的bug和资源。

Team
~~~~

Scrum相关著述推荐团队有7~9个成员（Schwaber 2004

将大团队拆分成多个小型Scrum团队负责某个模块，比如关卡原型制作团队。每个敏捷团队都包含所有职能的开发人员，设计、开发、测试等，他们共同为团队的产品交付物负责。

每日站会
--------

目的：

1. 让所有团队成员统一步调，一起向着“完成Sprint”的目标进发；
2. 承诺第二天要完成的工作，并重申团队对Sprint目标的承诺；
3. 识别出团队面临的所有障碍；
4. 使团队成员成为“一条绳子上的蚂蚱“，每个人都需要了解其它人面临的困难，以便在会后找到解决方法。

Q：为什么一定要是”站“会呢？

A：因为要通过站立的形式让大家明确，这是一个需要快速解决的短会，而非冗长艰苦的会议。

反馈
----

销售，服务环节，运营环节，甚至公司团队成员本身，在ONES系统上我们可以用反馈池进行详尽记录：

敏捷开发 `2 <https://www.jianshu.com/p/e53974f9cbc9>`__
-------------------------------------------------------

把一个大的产品功能模块拆解为多个相互独立的小功能模块，每次只上线一部分功能，在保证产品可用的前提下，一步步迭代完成整个功能的上线，这种方式就叫敏捷开发。
`4 <https://weread.qq.com/web/reader/8d232b60721a488e8d21e54kc51323901dc51ce410c121b>`__

例如，一款新的电商App要做一个购物车功能，第一个版本上线最基础的商品结算功能，第二个版本上线移除商品功能，第三个版本上线降价商品提醒功能等，不要在一次迭代中把所有的功能都做完。

宣言
~~~~

-  个体和交互胜过过程和工具。
-  可以工作的软件胜过面面俱到的文档。
-  客户合作胜过合同谈判。
-  响应变化胜过遵循计划。

计划
~~~~

-  任何过大的素材都应该被分解成小一点的部分，任何过小素材都应该和其它小的素材合并。
-  如果知道了开发速度，客户就能够对每个素材的成本有所了解。
-  迭代期间用户素材的实现顺序属于技术决策范畴。
-  一旦迭代开始，客户就不能改变该迭代期内需要实现的素材。

测试
~~~~

编写单元测试是一种验证行为，更是一种设计行为。同样，它更是一种编写文档的行为。编写单元测试避免了相当数量的反馈循环，尤其是功能验证方面的反馈循环。

首先编写测试可以：

-  程序中的每一项功能都有测试来验证它的操作的正确性。
-  迫使我们使用不同的观察点。
-  迫使自己把程序设计为可测试的，从而迫使我们解除软件中的耦合。（forces
   us to decouple the software）
-  作为一种无价的文档形式。

重构
~~~~

每一个软件模块都有三个职责：

1. 它运行起来所完成的功能。
2. 它要应对变化。
3. 要和阅读它的人进行沟通。

项目看板
--------

项目看板清晰地展示了：需求池中的哪些功能待开发；哪些功能进入UI设计阶段；哪些需求在开发阶段；哪些需求在测试阶段；哪些需求已经上线；哪些需求需要延期等。项目看板可以明确哪类问题需要谁去跟进，从而保证项目按照项目排期表稳步推进

项目排期表
~~~~~~~~~~

项目排期表为了保证项目按时上线，会使用项目排期表确定每个参与者的具体工作内容及起止时间。项目排期表示例如图所示。

.. figure:: ../img/project_table.png

   项目排期表

敏捷产品 `5 <https://zhiya360.com/135801.html>`__
-------------------------------------------------

对于产品小团体交付给设计小团体前，我们要做需求、方案、原型三个方面的敏捷冲刺

1. 需求敏捷
2. 方案敏捷
3. 原型敏捷

需求敏捷
~~~~~~~~

所有公司都用专门的问题反馈线：客户->Customer Service->Support
Engineer->PM->SDM->SDE
